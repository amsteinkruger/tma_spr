# Define observations in latitude and longitude.
obs = st_as_sf(dat_obs, coords = c("long", "lat"), crs = "+proj=longlat") %>%
st_transform(crs)
# Define interdictions in latitude and longitude.
int = st_as_sf(dat_int, coords = c("long", "lat"), crs = "+proj=longlat") %>%
st_transform(crs)
# Squish point data together for convenience.
sel_obs = select(obs, geometry) %>%
mutate("type" = "Observation")
sel_int = select(int, geometry) %>%
mutate("type" = "Interdiction")
points = rbind(sel_obs, sel_int)
map =
ggplot() +
#geom_sf(data = veda, fill = "#04859B", color = "black") +
geom_sf(data = count, linetype = "dotted", color = "black", fill = "#DCD6CC") +
scale_fill_manual(values = c("#EF5645", "#7A8D39")) +
geom_sf(data = coast, color = "black") +
#geom_sf(data = points, aes(fill = type), pch = 21, size = 2.25) +
coord_sf(xlim = c(box["xmin"], box["xmax"]), ylim = c(box["ymin"], box["ymax"]), datum = NA) +
theme(panel.background = element_rect(fill = "#003660", colour = "black")) +
theme(legend.position = "none")
ggsave("map.png", map, dpi = 300, width = 2, height = 12)
# Define CRS. 4485 corresponds to Mexico ITRF92.
crs = "+init=epsg:4485"
# Transform coastline data.
count = st_transform(count, crs)
# Transform coastline data.
coast = st_transform(coast, crs)
# Define area of interest in latitude and longitude.
lonbox = c(-117.5, -100.5, -100.5, -117.5, -117.5)
latbox = c(32.75, 32.75, 22.5, 22.5, 32.75)
# Transform area of interest from latitude and longitude to CRS.
box = cbind(lonbox, latbox) %>%
list() %>%
st_polygon() %>%
st_sfc(crs = "+proj=longlat") %>%
st_transform(crs = crs) %>%
st_bbox
# Define protected area in latitude and longitude.
#  Quick wrangle for polygon wraparound.
dat_veda[6,] = dat_veda[1,]
#  Everything else.
veda = cbind(dat_veda$y, dat_veda$x) %>%
list() %>%
st_polygon() %>%
st_sfc(crs = "+proj=longlat") %>%
st_transform(crs = crs)
# Define observations in latitude and longitude.
obs = st_as_sf(dat_obs, coords = c("long", "lat"), crs = "+proj=longlat") %>%
st_transform(crs)
# Define interdictions in latitude and longitude.
int = st_as_sf(dat_int, coords = c("long", "lat"), crs = "+proj=longlat") %>%
st_transform(crs)
# Squish point data together for convenience.
sel_obs = select(obs, geometry) %>%
mutate("type" = "Observation")
sel_int = select(int, geometry) %>%
mutate("type" = "Interdiction")
points = rbind(sel_obs, sel_int)
map =
ggplot() +
#geom_sf(data = veda, fill = "#04859B", color = "black") +
geom_sf(data = count, linetype = "dotted", color = "black", fill = "#DCD6CC") +
scale_fill_manual(values = c("#EF5645", "#7A8D39")) +
geom_sf(data = coast, color = "black") +
#geom_sf(data = points, aes(fill = type), pch = 21, size = 2.25) +
coord_sf(xlim = c(box["xmin"], box["xmax"]), ylim = c(box["ymin"], box["ymax"]), datum = NA) +
theme(panel.background = element_rect(fill = "#003660", colour = "black")) +
theme(legend.position = "none")
ggsave("map.png", map, dpi = 300) #, width = 12, height = 12
map =
ggplot() +
#geom_sf(data = veda, fill = "#04859B", color = "black") +
geom_sf(data = count, linetype = "dotted", color = "black", fill = "#C9BF9D") + #DCD6CC
scale_fill_manual(values = c("#EF5645", "#7A8D39")) +
geom_sf(data = coast, color = "#C9BF9D") +
#geom_sf(data = points, aes(fill = type), pch = 21, size = 2.25) +
coord_sf(xlim = c(box["xmin"], box["xmax"]), ylim = c(box["ymin"], box["ymax"]), datum = NA) +
theme(panel.background = element_rect(fill = "#003660", colour = "black")) +
theme(legend.position = "none")
print(map)
# Define CRS. 4485 corresponds to Mexico ITRF92.
crs = "+init=epsg:4485"
# Transform coastline data.
count = st_transform(count, crs)
# Transform coastline data.
coast = st_transform(coast, crs)
# Define area of interest in latitude and longitude.
lonbox = c(-117.25, -106.5, -106.5, -117.25, -117.25)
latbox = c(32.75, 32.75, 22.5, 22.5, 32.75)
# Transform area of interest from latitude and longitude to CRS.
box = cbind(lonbox, latbox) %>%
list() %>%
st_polygon() %>%
st_sfc(crs = "+proj=longlat") %>%
st_transform(crs = crs) %>%
st_bbox
# Define protected area in latitude and longitude.
#  Quick wrangle for polygon wraparound.
dat_veda[6,] = dat_veda[1,]
#  Everything else.
veda = cbind(dat_veda$y, dat_veda$x) %>%
list() %>%
st_polygon() %>%
st_sfc(crs = "+proj=longlat") %>%
st_transform(crs = crs)
# Define observations in latitude and longitude.
obs = st_as_sf(dat_obs, coords = c("long", "lat"), crs = "+proj=longlat") %>%
st_transform(crs)
# Define interdictions in latitude and longitude.
int = st_as_sf(dat_int, coords = c("long", "lat"), crs = "+proj=longlat") %>%
st_transform(crs)
# Squish point data together for convenience.
sel_obs = select(obs, geometry) %>%
mutate("type" = "Observation")
sel_int = select(int, geometry) %>%
mutate("type" = "Interdiction")
points = rbind(sel_obs, sel_int)
map =
ggplot() +
#geom_sf(data = veda, fill = "#04859B", color = "black") +
geom_sf(data = count, linetype = "dotted", color = "black", fill = "#C9BF9D") + #DCD6CC
scale_fill_manual(values = c("#EF5645", "#7A8D39")) +
geom_sf(data = coast, color = "#C9BF9D") +
#geom_sf(data = points, aes(fill = type), pch = 21, size = 2.25) +
coord_sf(xlim = c(box["xmin"], box["xmax"]), ylim = c(box["ymin"], box["ymax"]), datum = NA) +
theme(panel.background = element_rect(fill = "#003660", colour = "black")) +
theme(legend.position = "none")
print(map)
ggsave("map.png", map, dpi = 300)
# Define CRS. 4485 corresponds to Mexico ITRF92.
crs = "+init=epsg:4485"
# Transform coastline data.
count = st_transform(count, crs)
# Transform coastline data.
coast = st_transform(coast, crs)
# Define area of interest in latitude and longitude.
lonbox = c(-117, -106.5, -106.5, -117, -117)
latbox = c(32.75, 32.75, 22.5, 22.5, 32.75)
# Transform area of interest from latitude and longitude to CRS.
box = cbind(lonbox, latbox) %>%
list() %>%
st_polygon() %>%
st_sfc(crs = "+proj=longlat") %>%
st_transform(crs = crs) %>%
st_bbox
# Define protected area in latitude and longitude.
#  Quick wrangle for polygon wraparound.
dat_veda[6,] = dat_veda[1,]
#  Everything else.
veda = cbind(dat_veda$y, dat_veda$x) %>%
list() %>%
st_polygon() %>%
st_sfc(crs = "+proj=longlat") %>%
st_transform(crs = crs)
# Define observations in latitude and longitude.
obs = st_as_sf(dat_obs, coords = c("long", "lat"), crs = "+proj=longlat") %>%
st_transform(crs)
# Define interdictions in latitude and longitude.
int = st_as_sf(dat_int, coords = c("long", "lat"), crs = "+proj=longlat") %>%
st_transform(crs)
# Squish point data together for convenience.
sel_obs = select(obs, geometry) %>%
mutate("type" = "Observation")
sel_int = select(int, geometry) %>%
mutate("type" = "Interdiction")
points = rbind(sel_obs, sel_int)
map =
ggplot() +
#geom_sf(data = veda, fill = "#04859B", color = "black") +
geom_sf(data = count, linetype = "dotted", color = "black", fill = "#C9BF9D") + #DCD6CC
scale_fill_manual(values = c("#EF5645", "#7A8D39")) +
geom_sf(data = coast, color = "#C9BF9D") +
#geom_sf(data = points, aes(fill = type), pch = 21, size = 2.25) +
coord_sf(xlim = c(box["xmin"], box["xmax"]), ylim = c(box["ymin"], box["ymax"]), datum = NA) +
theme(panel.background = element_rect(fill = "#003660", colour = "black")) +
theme(legend.position = "none")
map
# Define CRS. 4485 corresponds to Mexico ITRF92.
crs = "+init=epsg:4485"
# Transform coastline data.
count = st_transform(count, crs)
# Transform coastline data.
coast = st_transform(coast, crs)
# Define area of interest in latitude and longitude.
lonbox = c(-117, -106.5, -106.5, -117, -117)
latbox = c(33, 33, 22.5, 22.5, 33)
# Transform area of interest from latitude and longitude to CRS.
box = cbind(lonbox, latbox) %>%
list() %>%
st_polygon() %>%
st_sfc(crs = "+proj=longlat") %>%
st_transform(crs = crs) %>%
st_bbox
# Define protected area in latitude and longitude.
#  Quick wrangle for polygon wraparound.
dat_veda[6,] = dat_veda[1,]
#  Everything else.
veda = cbind(dat_veda$y, dat_veda$x) %>%
list() %>%
st_polygon() %>%
st_sfc(crs = "+proj=longlat") %>%
st_transform(crs = crs)
# Define observations in latitude and longitude.
obs = st_as_sf(dat_obs, coords = c("long", "lat"), crs = "+proj=longlat") %>%
st_transform(crs)
# Define interdictions in latitude and longitude.
int = st_as_sf(dat_int, coords = c("long", "lat"), crs = "+proj=longlat") %>%
st_transform(crs)
# Squish point data together for convenience.
sel_obs = select(obs, geometry) %>%
mutate("type" = "Observation")
sel_int = select(int, geometry) %>%
mutate("type" = "Interdiction")
points = rbind(sel_obs, sel_int)
map =
ggplot() +
#geom_sf(data = veda, fill = "#04859B", color = "black") +
geom_sf(data = count, linetype = "dotted", color = "black", fill = "#C9BF9D") + #DCD6CC
scale_fill_manual(values = c("#EF5645", "#7A8D39")) +
geom_sf(data = coast, color = "#C9BF9D") +
#geom_sf(data = points, aes(fill = type), pch = 21, size = 2.25) +
coord_sf(xlim = c(box["xmin"], box["xmax"]), ylim = c(box["ymin"], box["ymax"]), datum = NA) +
theme(panel.background = element_rect(fill = "#003660", colour = "black")) +
theme(legend.position = "none")
map
map =
ggplot() +
#geom_sf(data = veda, fill = "#04859B", color = "black") +
geom_sf(data = count, linetype = "dotted", color = "black", fill = "#C9BF9D") + #DCD6CC
scale_fill_manual(values = c("#EF5645", "#7A8D39")) +
geom_sf(data = coast, color = "#C9BF9D") +
#geom_sf(data = points, aes(fill = type), pch = 21, size = 2.25) +
coord_sf(xlim = c(box["xmin"], box["xmax"]), ylim = c(box["ymin"], box["ymax"]), datum = NA) +
theme(panel.background = element_rect(fill = "#003660", colour = NA)) +
theme(legend.position = "none")
map
ggsave("map.png", map, dpi = 300)
library(readr)
library(dplyr)
library(ggplot2)
library(sf)
library(rgdal)
library(rnaturalearth)
# Read data from local sources.
#  Observations.
dat_obs = read_csv("tma_obs.csv")
#  Interdictions.
dat_int = read_csv("tma_int.csv")
#  Closure.
dat_veda = read_csv("tma_veda.csv")
# Read data from cloud sources.
#  Countries.
count = ne_download(scale = 10, type = "countries", category = "cultural", returnclass = "sf")
#  Coastlines.
coast = ne_download(scale = 10, type = "coastline", category = "physical", returnclass = "sf")
# Define CRS. 4485 corresponds to Mexico ITRF92.
crs = "+init=epsg:4485"
# Transform coastline data.
count = st_transform(count, crs)
# Transform coastline data.
coast = st_transform(coast, crs)
# Define area of interest in latitude and longitude.
lonbox = c(-117, -106.5, -106.5, -117, -117)
latbox = c(33, 33, 22.5, 22.5, 33)
# Transform area of interest from latitude and longitude to CRS.
box = cbind(lonbox, latbox) %>%
list() %>%
st_polygon() %>%
st_sfc(crs = "+proj=longlat") %>%
st_transform(crs = crs) %>%
st_bbox
# Define protected area in latitude and longitude.
#  Quick wrangle for polygon wraparound.
dat_veda[6,] = dat_veda[1,]
#  Everything else.
veda = cbind(dat_veda$y, dat_veda$x) %>%
list() %>%
st_polygon() %>%
st_sfc(crs = "+proj=longlat") %>%
st_transform(crs = crs)
# Define observations in latitude and longitude.
obs = st_as_sf(dat_obs, coords = c("long", "lat"), crs = "+proj=longlat") %>%
st_transform(crs)
# Define interdictions in latitude and longitude.
int = st_as_sf(dat_int, coords = c("long", "lat"), crs = "+proj=longlat") %>%
st_transform(crs)
# Squish point data together for convenience.
sel_obs = select(obs, geometry) %>%
mutate("type" = "Observation")
sel_int = select(int, geometry) %>%
mutate("type" = "Interdiction")
points = rbind(sel_obs, sel_int)
map =
ggplot() +
#geom_sf(data = veda, fill = "#04859B", color = "black") +
geom_sf(data = count, linetype = "dotted", color = "black", fill = "#C9BF9D") + #DCD6CC
scale_fill_manual(values = c("#EF5645", "#7A8D39")) +
geom_sf(data = coast, color = "#C9BF9D") +
#geom_sf(data = points, aes(fill = type), pch = 21, size = 2.25) +
coord_sf(xlim = c(box["xmin"], box["xmax"]), ylim = c(box["ymin"], box["ymax"]), datum = NA) +
theme(panel.background = element_rect(fill = "#003660", colour = NA)) +
theme(legend.position = "none")
#ggsave("map.png", map, dpi = 300)
map
library(readr)
library(dplyr)
library(ggplot2)
library(sf)
library(rgdal)
library(rnaturalearth)
# Read data from local sources.
#  Observations.
dat_obs = read_csv("tma_obs.csv")
#  Interdictions.
dat_int = read_csv("tma_int.csv")
#  Closure.
dat_veda = read_csv("tma_veda.csv")
# Read data from cloud sources.
#  Countries.
count = ne_download(scale = 110, type = "countries", category = "cultural", returnclass = "sf")
#  Coastlines.
coast = ne_download(scale = 110, type = "coastline", category = "physical", returnclass = "sf")
# Define CRS. 4485 corresponds to Mexico ITRF92.
crs = "+init=epsg:4485"
# Transform coastline data.
count = st_transform(count, crs)
# Transform coastline data.
coast = st_transform(coast, crs)
# Define area of interest in latitude and longitude.
lonbox = c(-117, -106.5, -106.5, -117, -117)
latbox = c(33, 33, 22.5, 22.5, 33)
# Transform area of interest from latitude and longitude to CRS.
box = cbind(lonbox, latbox) %>%
list() %>%
st_polygon() %>%
st_sfc(crs = "+proj=longlat") %>%
st_transform(crs = crs) %>%
st_bbox
# Define protected area in latitude and longitude.
#  Quick wrangle for polygon wraparound.
dat_veda[6,] = dat_veda[1,]
#  Everything else.
veda = cbind(dat_veda$y, dat_veda$x) %>%
list() %>%
st_polygon() %>%
st_sfc(crs = "+proj=longlat") %>%
st_transform(crs = crs)
# Define observations in latitude and longitude.
obs = st_as_sf(dat_obs, coords = c("long", "lat"), crs = "+proj=longlat") %>%
st_transform(crs)
# Define interdictions in latitude and longitude.
int = st_as_sf(dat_int, coords = c("long", "lat"), crs = "+proj=longlat") %>%
st_transform(crs)
# Squish point data together for convenience.
sel_obs = select(obs, geometry) %>%
mutate("type" = "Observation")
sel_int = select(int, geometry) %>%
mutate("type" = "Interdiction")
points = rbind(sel_obs, sel_int)
map =
ggplot() +
#geom_sf(data = veda, fill = "#04859B", color = "black") +
geom_sf(data = count, linetype = "dotted", color = "black", fill = "#C9BF9D") + #DCD6CC
scale_fill_manual(values = c("#EF5645", "#7A8D39")) +
geom_sf(data = coast, color = "#C9BF9D") +
#geom_sf(data = points, aes(fill = type), pch = 21, size = 2.25) +
coord_sf(xlim = c(box["xmin"], box["xmax"]), ylim = c(box["ymin"], box["ymax"]), datum = NA) +
theme(panel.background = element_rect(fill = "#003660", colour = NA)) +
theme(legend.position = "none")
map =
ggplot() +
#geom_sf(data = veda, fill = "#04859B", color = "black") +
geom_sf(data = count, linetype = "dotted", color = "black", fill = "#C9BF9D") + #DCD6CC
scale_fill_manual(values = c("#EF5645", "#7A8D39")) +
geom_sf(data = coast, color = "#C9BF9D") +
#geom_sf(data = points, aes(fill = type), pch = 21, size = 2.25) +
coord_sf(xlim = c(box["xmin"], box["xmax"]), ylim = c(box["ymin"], box["ymax"]), datum = NA) +
theme_classic() +
theme(panel.background = element_rect(fill = "#003660", colour = NA)) +
theme(legend.position = "none")
map
?labs
map =
ggplot() +
#geom_sf(data = veda, fill = "#04859B", color = "black") +
geom_sf(data = count, linetype = "dotted", color = "black", fill = "#C9BF9D") + #DCD6CC
scale_fill_manual(values = c("#EF5645", "#7A8D39")) +
geom_sf(data = coast, color = "#C9BF9D") +
#geom_sf(data = points, aes(fill = type), pch = 21, size = 2.25) +
coord_sf(xlim = c(box["xmin"], box["xmax"]), ylim = c(box["ymin"], box["ymax"]), datum = NA) +
labs(caption = "Here's your caption.", title = "Here's your tile.")
theme_classic() +
theme(panel.background = element_rect(fill = "#003660", colour = NA)) +
theme(legend.position = "none")
map =
ggplot() +
#geom_sf(data = veda, fill = "#04859B", color = "black") +
geom_sf(data = count, linetype = "dotted", color = "black", fill = "#C9BF9D") + #DCD6CC
scale_fill_manual(values = c("#EF5645", "#7A8D39")) +
geom_sf(data = coast, color = "#C9BF9D") +
#geom_sf(data = points, aes(fill = type), pch = 21, size = 2.25) +
coord_sf(xlim = c(box["xmin"], box["xmax"]), ylim = c(box["ymin"], box["ymax"]), datum = NA) +
labs(caption = "Here's your caption.", title = "Here's your tile.") +
theme_classic() +
theme(panel.background = element_rect(fill = "#003660", colour = NA)) +
theme(legend.position = "none")
map
ggsave("map.png", map, dpi = 300)
map =
ggplot() +
#geom_sf(data = veda, fill = "#04859B", color = "black") +
geom_sf(data = count, linetype = "dashed", color = "black", fill = "#C9BF9D") + #DCD6CC
scale_fill_manual(values = c("#EF5645", "#7A8D39")) +
geom_sf(data = coast, color = "#C9BF9D") +
#geom_sf(data = points, aes(fill = type), pch = 21, size = 2.25) +
coord_sf(xlim = c(box["xmin"], box["xmax"]), ylim = c(box["ymin"], box["ymax"]), datum = NA) +
labs(caption = "Here's your caption.", title = "Here's your title.") +
theme_classic() +
theme(panel.background = element_rect(fill = "#003660", colour = NA)) +
theme(legend.position = "none")
map
map =
ggplot() +
#geom_sf(data = veda, fill = "#04859B", color = "black") +
geom_sf(data = count, linetype = "dashed", color = "black", fill = "#C9BF9D") + #DCD6CC
scale_fill_manual(values = c("#EF5645", "#7A8D39")) +
geom_sf(data = coast, color = "#C9BF9D") +
#geom_sf(data = points, aes(fill = type), pch = 21, size = 2.25) +
coord_sf(xlim = c(box["xmin"], box["xmax"]), ylim = c(box["ymin"], box["ymax"]), datum = NA) +
#labs(caption = "Here's your caption.", title = "Here's your title.") +
theme_classic() +
theme(panel.background = element_rect(fill = "#003660", colour = NA)) #+
#theme(legend.position = "none")
map
map =
ggplot() +
#geom_sf(data = veda, fill = "#04859B", color = "black") +
geom_sf(data = count, color = "black", fill = "#C9BF9D") + #DCD6CC
scale_fill_manual(values = c("#EF5645", "#7A8D39")) +
geom_sf(data = coast, color = "#C9BF9D") +
#geom_sf(data = points, aes(fill = type), pch = 21, size = 2.25) +
coord_sf(xlim = c(box["xmin"], box["xmax"]), ylim = c(box["ymin"], box["ymax"]), datum = NA) +
#labs(caption = "Here's your caption.", title = "Here's your title.") +
theme_classic() +
theme(panel.background = element_rect(fill = "#003660", colour = NA)) #+
#theme(legend.position = "none")
map
map =
ggplot() +
geom_sf(data = veda, fill = "#04859B", color = "black") +
geom_sf(data = count, color = "black", fill = "#C9BF9D") + #DCD6CC
scale_fill_manual(values = c("#EF5645", "#7A8D39")) +
geom_sf(data = coast, color = "#C9BF9D") +
geom_sf(data = points, aes(fill = type), pch = 21, size = 2.25) +
coord_sf(xlim = c(box["xmin"], box["xmax"]), ylim = c(box["ymin"], box["ymax"]), datum = NA) +
#labs(caption = "Here's your caption.", title = "Here's your title.") +
theme_classic() +
theme(panel.background = element_rect(fill = "#003660", colour = NA)) #+
#theme(legend.position = "none")
map
# Define CRS. 4485 corresponds to Mexico ITRF92.
crs = "+init=epsg:4485"
# Transform coastline data.
count = st_transform(count, crs)
# Transform coastline data.
coast = st_transform(coast, crs)
# Define area of interest in latitude and longitude.
lonbox = c(-117, -102.5, -102.5, -117, -117)
latbox = c(33, 33, 22.5, 22.5, 33)
# Transform area of interest from latitude and longitude to CRS.
box = cbind(lonbox, latbox) %>%
list() %>%
st_polygon() %>%
st_sfc(crs = "+proj=longlat") %>%
st_transform(crs = crs) %>%
st_bbox
# Define protected area in latitude and longitude.
#  Quick wrangle for polygon wraparound.
dat_veda[6,] = dat_veda[1,]
#  Everything else.
veda = cbind(dat_veda$y, dat_veda$x) %>%
list() %>%
st_polygon() %>%
st_sfc(crs = "+proj=longlat") %>%
st_transform(crs = crs)
# Define observations in latitude and longitude.
obs = st_as_sf(dat_obs, coords = c("long", "lat"), crs = "+proj=longlat") %>%
st_transform(crs)
# Define interdictions in latitude and longitude.
int = st_as_sf(dat_int, coords = c("long", "lat"), crs = "+proj=longlat") %>%
st_transform(crs)
# Squish point data together for convenience.
sel_obs = select(obs, geometry) %>%
mutate("type" = "Observation")
sel_int = select(int, geometry) %>%
mutate("type" = "Interdiction")
points = rbind(sel_obs, sel_int)
map =
ggplot() +
geom_sf(data = veda, fill = "#04859B", color = "black") +
geom_sf(data = count, color = "black", fill = "#C9BF9D") + #DCD6CC
scale_fill_manual(values = c("#EF5645", "#7A8D39")) +
geom_sf(data = coast, color = "#C9BF9D") +
geom_sf(data = points, aes(fill = type), pch = 21, size = 2.25) +
coord_sf(xlim = c(box["xmin"], box["xmax"]), ylim = c(box["ymin"], box["ymax"]), datum = NA) +
#labs(caption = "Here's your caption.", title = "Here's your title.") +
theme_classic() +
theme(panel.background = element_rect(fill = "#003660", colour = NA)) +
theme(legend.position = "none")
map
